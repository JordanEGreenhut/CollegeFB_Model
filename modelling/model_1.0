{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "20a3bfda",
   "metadata": {},
   "outputs": [],
   "source": [
    "### Proof of concept model. Goal is to quickly convert columns to appropriate data types, do minimal feature\n",
    "### engineering and data cleaning / transformations producing a simple, linear model. \n",
    "\n",
    "## import packages often used in College Football modelling\n",
    "%run CFBModel/data_collection_preparation/import_modules.ipynb"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "55c9824b",
   "metadata": {},
   "outputs": [],
   "source": [
    "## Open college football database\n",
    "## use second half of college football data as test dataset\n",
    "con=sqlite3.connect('CFBModel/collegeFootball.db')\n",
    "cursor_obj= con.cursor()\n",
    "## Get Games2024 data\n",
    "games2024 = pd.read_sql(\"\"\"SELECT * FROM Games2024\"\"\", con)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "797d62f2",
   "metadata": {},
   "outputs": [],
   "source": [
    "### write function to do this parsing\n",
    "## Get games 2020 to 2023 for training data and select 2024 data\n",
    "# Test set is not na values in away_points and before week 9 in 2024\n",
    "\n",
    "games2023=pd.read_sql(\"\"\"SELECT * FROM Games2023\"\"\", con)\n",
    "games2022=pd.read_sql(\"\"\"SELECT * FROM Games2022\"\"\", con)\n",
    "games2021=pd.read_sql(\"\"\"SELECT * FROM Games2021\"\"\", con)\n",
    "games2020=pd.read_sql(\"\"\"SELECT * FROM Games2020\"\"\", con)\n",
    "train_list=[games2024[(~games2024.away_points.isna())&(games2024.week<9)],games2023,games2022,games2021,games2020]\n",
    "df_train=pd.concat(train_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "a797dba7",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Test set is na values in away_points and after week 9\n",
    "df_test=games2024[(games2024.away_points.isna())&(games2024.week>=9)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "f2c9773a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>away_conference</th>\n",
       "      <th>away_division</th>\n",
       "      <th>away_team</th>\n",
       "      <th>highlights</th>\n",
       "      <th>home_conference</th>\n",
       "      <th>home_division</th>\n",
       "      <th>home_team</th>\n",
       "      <th>season_type</th>\n",
       "      <th>start_date</th>\n",
       "      <th>venue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>12481</th>\n",
       "      <td>Conference USA</td>\n",
       "      <td>fbs</td>\n",
       "      <td>Sam Houston</td>\n",
       "      <td>None</td>\n",
       "      <td>Conference USA</td>\n",
       "      <td>fbs</td>\n",
       "      <td>Florida International</td>\n",
       "      <td>regular</td>\n",
       "      <td>2024-10-22T23:30:00.000Z</td>\n",
       "      <td>Pitbull Stadium</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12482</th>\n",
       "      <td>Conference USA</td>\n",
       "      <td>fbs</td>\n",
       "      <td>UTEP</td>\n",
       "      <td>None</td>\n",
       "      <td>Conference USA</td>\n",
       "      <td>fbs</td>\n",
       "      <td>Louisiana Tech</td>\n",
       "      <td>regular</td>\n",
       "      <td>2024-10-23T00:00:00.000Z</td>\n",
       "      <td>Joe Aillet Stadium</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12483</th>\n",
       "      <td>Conference USA</td>\n",
       "      <td>fbs</td>\n",
       "      <td>Liberty</td>\n",
       "      <td>None</td>\n",
       "      <td>Conference USA</td>\n",
       "      <td>fbs</td>\n",
       "      <td>Kennesaw State</td>\n",
       "      <td>regular</td>\n",
       "      <td>2024-10-23T23:00:00.000Z</td>\n",
       "      <td>Fifth Third Stadium</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12484</th>\n",
       "      <td>Conference USA</td>\n",
       "      <td>fbs</td>\n",
       "      <td>Middle Tennessee</td>\n",
       "      <td>None</td>\n",
       "      <td>Conference USA</td>\n",
       "      <td>fbs</td>\n",
       "      <td>Jacksonville State</td>\n",
       "      <td>regular</td>\n",
       "      <td>2024-10-23T23:30:00.000Z</td>\n",
       "      <td>AmFirst Stadium</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12485</th>\n",
       "      <td>Sun Belt</td>\n",
       "      <td>fbs</td>\n",
       "      <td>Georgia Southern</td>\n",
       "      <td>None</td>\n",
       "      <td>Sun Belt</td>\n",
       "      <td>fbs</td>\n",
       "      <td>Old Dominion</td>\n",
       "      <td>regular</td>\n",
       "      <td>2024-10-24T23:00:00.000Z</td>\n",
       "      <td>S.B. Ballard Stadium</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13865</th>\n",
       "      <td>Conference USA</td>\n",
       "      <td>fbs</td>\n",
       "      <td>Jacksonville State</td>\n",
       "      <td>None</td>\n",
       "      <td>Conference USA</td>\n",
       "      <td>fbs</td>\n",
       "      <td>Western Kentucky</td>\n",
       "      <td>regular</td>\n",
       "      <td>2024-11-30T20:30:00.000Z</td>\n",
       "      <td>Houchens Industries-L.T. Smith Stadium</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13866</th>\n",
       "      <td>Mountain West</td>\n",
       "      <td>fbs</td>\n",
       "      <td>Wyoming</td>\n",
       "      <td>None</td>\n",
       "      <td>Pac-12</td>\n",
       "      <td>fbs</td>\n",
       "      <td>Washington State</td>\n",
       "      <td>regular</td>\n",
       "      <td>2024-11-30T23:30:00.000Z</td>\n",
       "      <td>Gesa Field</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13867</th>\n",
       "      <td>Mountain West</td>\n",
       "      <td>fbs</td>\n",
       "      <td>Nevada</td>\n",
       "      <td>None</td>\n",
       "      <td>Mountain West</td>\n",
       "      <td>fbs</td>\n",
       "      <td>UNLV</td>\n",
       "      <td>regular</td>\n",
       "      <td>2024-12-01T01:00:00.000Z</td>\n",
       "      <td>Allegiant Stadium</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13868</th>\n",
       "      <td>Mountain West</td>\n",
       "      <td>fbs</td>\n",
       "      <td>New Mexico</td>\n",
       "      <td>None</td>\n",
       "      <td>Mountain West</td>\n",
       "      <td>fbs</td>\n",
       "      <td>Hawai'i</td>\n",
       "      <td>regular</td>\n",
       "      <td>2024-12-01T04:00:00.000Z</td>\n",
       "      <td>Clarence T.C. Ching Athletics Complex</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13869</th>\n",
       "      <td>American Athletic</td>\n",
       "      <td>fbs</td>\n",
       "      <td>Navy</td>\n",
       "      <td>None</td>\n",
       "      <td>American Athletic</td>\n",
       "      <td>fbs</td>\n",
       "      <td>Army</td>\n",
       "      <td>regular</td>\n",
       "      <td>2024-12-14T20:00:00.000Z</td>\n",
       "      <td>Northwest Stadium</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1389 rows Ã— 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         away_conference away_division           away_team highlights  \\\n",
       "12481     Conference USA           fbs         Sam Houston       None   \n",
       "12482     Conference USA           fbs                UTEP       None   \n",
       "12483     Conference USA           fbs             Liberty       None   \n",
       "12484     Conference USA           fbs    Middle Tennessee       None   \n",
       "12485           Sun Belt           fbs    Georgia Southern       None   \n",
       "...                  ...           ...                 ...        ...   \n",
       "13865     Conference USA           fbs  Jacksonville State       None   \n",
       "13866      Mountain West           fbs             Wyoming       None   \n",
       "13867      Mountain West           fbs              Nevada       None   \n",
       "13868      Mountain West           fbs          New Mexico       None   \n",
       "13869  American Athletic           fbs                Navy       None   \n",
       "\n",
       "         home_conference home_division              home_team season_type  \\\n",
       "12481     Conference USA           fbs  Florida International     regular   \n",
       "12482     Conference USA           fbs         Louisiana Tech     regular   \n",
       "12483     Conference USA           fbs         Kennesaw State     regular   \n",
       "12484     Conference USA           fbs     Jacksonville State     regular   \n",
       "12485           Sun Belt           fbs           Old Dominion     regular   \n",
       "...                  ...           ...                    ...         ...   \n",
       "13865     Conference USA           fbs       Western Kentucky     regular   \n",
       "13866             Pac-12           fbs       Washington State     regular   \n",
       "13867      Mountain West           fbs                   UNLV     regular   \n",
       "13868      Mountain West           fbs                Hawai'i     regular   \n",
       "13869  American Athletic           fbs                   Army     regular   \n",
       "\n",
       "                     start_date                                   venue  \n",
       "12481  2024-10-22T23:30:00.000Z                         Pitbull Stadium  \n",
       "12482  2024-10-23T00:00:00.000Z                      Joe Aillet Stadium  \n",
       "12483  2024-10-23T23:00:00.000Z                     Fifth Third Stadium  \n",
       "12484  2024-10-23T23:30:00.000Z                         AmFirst Stadium  \n",
       "12485  2024-10-24T23:00:00.000Z                    S.B. Ballard Stadium  \n",
       "...                         ...                                     ...  \n",
       "13865  2024-11-30T20:30:00.000Z  Houchens Industries-L.T. Smith Stadium  \n",
       "13866  2024-11-30T23:30:00.000Z                              Gesa Field  \n",
       "13867  2024-12-01T01:00:00.000Z                       Allegiant Stadium  \n",
       "13868  2024-12-01T04:00:00.000Z   Clarence T.C. Ching Athletics Complex  \n",
       "13869  2024-12-14T20:00:00.000Z                       Northwest Stadium  \n",
       "\n",
       "[1389 rows x 10 columns]"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_test[df_test.dtypes[df_test.dtypes==object].keys()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "1e0abdd5",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\jorda\\AppData\\Local\\Temp\\ipykernel_19592\\3018309407.py:2: UserWarning: Pandas doesn't allow columns to be created via a new attribute name - see https://pandas.pydata.org/pandas-docs/stable/indexing.html#attribute-access\n",
      "  df_test.away_conf_one_hot= one_hot_away_conf\n"
     ]
    }
   ],
   "source": [
    "one_hot_away_conf = pd.get_dummies(df_test.away_conference)\n",
    "df_test.away_conf_one_hot= one_hot_away_conf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "61cf8115",
   "metadata": {},
   "outputs": [],
   "source": [
    "fbsTeams = pd.read_sql(\"\"\"SELECT * FROM fbsTeams\"\"\", con)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "56d97188",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_test=df_test.merge(fbsTeams, left_on=\"away_id\", right_on='id',how='left')\n",
    "df_test=pd.merge(df_test, fbsTeams, left_on='away_id', right_on='id', how='left', suffixes=('_away', '_home'))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "e6cdda2a",
   "metadata": {},
   "outputs": [],
   "source": [
    "advSGS_24 = pd.read_sql(\"\"\"SELECT * FROM advancedSeasonGameStat24\"\"\", con)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "8b679e95",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['index', 'game_id', 'team_id', 'team_name', 'home_away', 'conference',\n",
       "       'points', 'rushingTDs', 'puntReturnYards', 'puntReturnTDs',\n",
       "       'puntReturns', 'passingTDs', 'kickReturnYards', 'kickReturnTDs',\n",
       "       'kickReturns', 'kickingPoints', 'interceptionYards', 'interceptionTDs',\n",
       "       'passesIntercepted', 'fumblesRecovered', 'totalFumbles',\n",
       "       'tacklesForLoss', 'defensiveTDs', 'tackles', 'sacks', 'qbHurries',\n",
       "       'passesDeflected', 'possessionTime', 'interceptions', 'fumblesLost',\n",
       "       'turnovers', 'totalPenaltiesYards', 'yardsPerRushAttempt',\n",
       "       'rushingAttempts', 'rushingYards', 'yardsPerPass', 'completionAttempts',\n",
       "       'netPassingYards', 'totalYards', 'fourthDownEff', 'thirdDownEff',\n",
       "       'firstDowns'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "advSGS_24.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "7e5fa954",
   "metadata": {},
   "outputs": [
    {
     "ename": "MergeError",
     "evalue": "Passing 'suffixes' which cause duplicate columns {'index_x'} is not allowed.",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mMergeError\u001b[0m                                Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[98], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m df_test\u001b[38;5;241m=\u001b[39mpd\u001b[38;5;241m.\u001b[39mmerge(df_test,advSGS_24,left_on\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124maway_id\u001b[39m\u001b[38;5;124m\"\u001b[39m,right_on\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mteam_id\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\reshape\\merge.py:162\u001b[0m, in \u001b[0;36mmerge\u001b[1;34m(left, right, how, on, left_on, right_on, left_index, right_index, sort, suffixes, copy, indicator, validate)\u001b[0m\n\u001b[0;32m    131\u001b[0m \u001b[38;5;129m@Substitution\u001b[39m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;124mleft : DataFrame or named Series\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m    132\u001b[0m \u001b[38;5;129m@Appender\u001b[39m(_merge_doc, indents\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m0\u001b[39m)\n\u001b[0;32m    133\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mmerge\u001b[39m(\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    146\u001b[0m     validate: \u001b[38;5;28mstr\u001b[39m \u001b[38;5;241m|\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[0;32m    147\u001b[0m ) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m DataFrame:\n\u001b[0;32m    148\u001b[0m     op \u001b[38;5;241m=\u001b[39m _MergeOperation(\n\u001b[0;32m    149\u001b[0m         left,\n\u001b[0;32m    150\u001b[0m         right,\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    160\u001b[0m         validate\u001b[38;5;241m=\u001b[39mvalidate,\n\u001b[0;32m    161\u001b[0m     )\n\u001b[1;32m--> 162\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m op\u001b[38;5;241m.\u001b[39mget_result(copy\u001b[38;5;241m=\u001b[39mcopy)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\reshape\\merge.py:811\u001b[0m, in \u001b[0;36m_MergeOperation.get_result\u001b[1;34m(self, copy)\u001b[0m\n\u001b[0;32m    807\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mleft, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mright \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_indicator_pre_merge(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mleft, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mright)\n\u001b[0;32m    809\u001b[0m join_index, left_indexer, right_indexer \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_get_join_info()\n\u001b[1;32m--> 811\u001b[0m result \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_reindex_and_concat(\n\u001b[0;32m    812\u001b[0m     join_index, left_indexer, right_indexer, copy\u001b[38;5;241m=\u001b[39mcopy\n\u001b[0;32m    813\u001b[0m )\n\u001b[0;32m    814\u001b[0m result \u001b[38;5;241m=\u001b[39m result\u001b[38;5;241m.\u001b[39m__finalize__(\u001b[38;5;28mself\u001b[39m, method\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_merge_type)\n\u001b[0;32m    816\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mindicator:\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\reshape\\merge.py:763\u001b[0m, in \u001b[0;36m_MergeOperation._reindex_and_concat\u001b[1;34m(self, join_index, left_indexer, right_indexer, copy)\u001b[0m\n\u001b[0;32m    760\u001b[0m left \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mleft[:]\n\u001b[0;32m    761\u001b[0m right \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mright[:]\n\u001b[1;32m--> 763\u001b[0m llabels, rlabels \u001b[38;5;241m=\u001b[39m _items_overlap_with_suffix(\n\u001b[0;32m    764\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mleft\u001b[38;5;241m.\u001b[39m_info_axis, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mright\u001b[38;5;241m.\u001b[39m_info_axis, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39msuffixes\n\u001b[0;32m    765\u001b[0m )\n\u001b[0;32m    767\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m left_indexer \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m is_range_indexer(left_indexer, \u001b[38;5;28mlen\u001b[39m(left)):\n\u001b[0;32m    768\u001b[0m     \u001b[38;5;66;03m# Pinning the index here (and in the right code just below) is not\u001b[39;00m\n\u001b[0;32m    769\u001b[0m     \u001b[38;5;66;03m#  necessary, but makes the `.take` more performant if we have e.g.\u001b[39;00m\n\u001b[0;32m    770\u001b[0m     \u001b[38;5;66;03m#  a MultiIndex for left.index.\u001b[39;00m\n\u001b[0;32m    771\u001b[0m     lmgr \u001b[38;5;241m=\u001b[39m left\u001b[38;5;241m.\u001b[39m_mgr\u001b[38;5;241m.\u001b[39mreindex_indexer(\n\u001b[0;32m    772\u001b[0m         join_index,\n\u001b[0;32m    773\u001b[0m         left_indexer,\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    778\u001b[0m         use_na_proxy\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m,\n\u001b[0;32m    779\u001b[0m     )\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\reshape\\merge.py:2640\u001b[0m, in \u001b[0;36m_items_overlap_with_suffix\u001b[1;34m(left, right, suffixes)\u001b[0m\n\u001b[0;32m   2638\u001b[0m     dups\u001b[38;5;241m.\u001b[39mextend(rlabels[(rlabels\u001b[38;5;241m.\u001b[39mduplicated()) \u001b[38;5;241m&\u001b[39m (\u001b[38;5;241m~\u001b[39mright\u001b[38;5;241m.\u001b[39mduplicated())]\u001b[38;5;241m.\u001b[39mtolist())\n\u001b[0;32m   2639\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m dups:\n\u001b[1;32m-> 2640\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m MergeError(\n\u001b[0;32m   2641\u001b[0m         \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mPassing \u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124msuffixes\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m which cause duplicate columns \u001b[39m\u001b[38;5;132;01m{\u001b[39;00m\u001b[38;5;28mset\u001b[39m(dups)\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m is \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   2642\u001b[0m         \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mnot allowed.\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m   2643\u001b[0m     )\n\u001b[0;32m   2645\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m llabels, rlabels\n",
      "\u001b[1;31mMergeError\u001b[0m: Passing 'suffixes' which cause duplicate columns {'index_x'} is not allowed."
     ]
    }
   ],
   "source": [
    "df_test=pd.merge(df_test,advSGS_24,left_on=\"away_id\",right_on=\"team_id\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
